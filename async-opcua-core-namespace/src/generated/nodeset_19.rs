// This file was autogenerated from schemas/1.05/Opc.Ua.NodeSet2.xml by async-opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use opcua_nodes as nodes;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_object_type_539 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_object_type_540,
            &make_object_type_542,
            &make_object_type_543,
            &make_object_type_545,
            &make_object_type_547,
            &make_object_type_548,
            &make_object_type_551,
            &make_object_type_553,
            &make_object_type_559,
            &make_object_type_60,
            &make_object_type_61,
            &make_object_type_72,
            &make_object_type_73,
            &make_object_type_76,
            &make_object_type_919,
            &make_object_type_935,
            &make_object_type_946,
            &make_object_type_948,
            &make_object_type_949,
            &make_object_type_951,
            &make_reference_type_1334,
            &make_reference_type_1339,
            &make_reference_type_1340,
            &make_reference_type_1429,
            &make_reference_type_1430,
            &make_reference_type_1439,
            &make_reference_type_1440,
            &make_reference_type_1441,
            &make_reference_type_1442,
            &make_reference_type_1443,
            &make_reference_type_1776,
            &make_reference_type_1777,
            &make_reference_type_1778,
            &make_reference_type_1779,
            &make_reference_type_1780,
            &make_reference_type_1928,
            &make_reference_type_1929,
            &make_reference_type_2785,
            &make_reference_type_3079,
            &make_reference_type_3115,
            &make_reference_type_33,
            &make_reference_type_3334,
            &make_reference_type_3335,
            &make_reference_type_34,
            &make_reference_type_3405,
            &make_reference_type_3406,
            &make_reference_type_35,
            &make_reference_type_36,
            &make_reference_type_37,
            &make_reference_type_38,
            &make_reference_type_3833,
            &make_reference_type_39,
            &make_reference_type_40,
            &make_reference_type_41,
            &make_reference_type_4122,
            &make_reference_type_4123,
            &make_reference_type_4124,
            &make_reference_type_4125,
            &make_reference_type_4126,
            &make_reference_type_4127,
            &make_reference_type_4128,
            &make_reference_type_4129,
            &make_reference_type_4130,
            &make_reference_type_4131,
            &make_reference_type_4132,
            &make_reference_type_4133,
            &make_reference_type_4134,
            &make_reference_type_4135,
            &make_reference_type_4136,
            &make_reference_type_4137,
            &make_reference_type_42,
            &make_reference_type_43,
            &make_reference_type_44,
            &make_reference_type_45,
            &make_reference_type_46,
            &make_reference_type_47,
            &make_reference_type_48,
            &make_reference_type_49,
            &make_reference_type_50,
            &make_reference_type_51,
            &make_reference_type_52,
            &make_reference_type_53,
            &make_reference_type_54,
            &make_reference_type_55,
            &make_reference_type_56,
            &make_reference_type_57,
            &make_reference_type_58,
            &make_reference_type_59,
            &make_reference_type_910,
            &make_reference_type_92,
            &make_reference_type_93,
            &make_reference_type_952,
            &make_variable_100,
            &make_variable_1008,
            &make_variable_1009,
            &make_variable_101,
            &make_variable_1010,
            &make_variable_1011,
            &make_variable_1012,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_object_type_539(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2131u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DeviceFailureEventType"),
                opcua::types::LocalizedText::new("", "DeviceFailureEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2130u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_540(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11446u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "SystemStatusChangeEventType"),
                opcua::types::LocalizedText::new("", "SystemStatusChangeEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11696u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2130u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_542(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2132u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "BaseModelChangeEventType"),
                opcua::types::LocalizedText::new("", "BaseModelChangeEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2041u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_543(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2133u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "GeneralModelChangeEventType"),
                opcua::types::LocalizedText::new("", "GeneralModelChangeEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2134u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2132u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_545(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2738u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "SemanticChangeEventType"),
                opcua::types::LocalizedText::new("", "SemanticChangeEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2739u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2041u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_547(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3035u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "EventQueueOverflowEventType"),
                opcua::types::LocalizedText::new("", "EventQueueOverflowEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2041u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_548(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11436u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "ProgressEventType"),
                opcua::types::LocalizedText::new("", "ProgressEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12502u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12503u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2041u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_551(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23606u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditClientEventType"),
                opcua::types::LocalizedText::new("", "AuditClientEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23908u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2052u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_553(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23926u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditClientUpdateMethodResultEventType"),
                opcua::types::LocalizedText::new("", "AuditClientUpdateMethodResultEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23994u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23995u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23998u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23999u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25684u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23606u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_559(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2340u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AggregateFunctionType"),
                opcua::types::LocalizedText::new("", "AggregateFunctionType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_60(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 58u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "BaseObjectType"),
                opcua::types::LocalizedText::new("", "BaseObjectType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![],
    }
}
#[allow(unused)]
fn make_object_type_61(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 61u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "FolderType"),
                opcua::types::LocalizedText::new("", "FolderType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_72(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 75u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DataTypeSystemType"),
                opcua::types::LocalizedText::new("", "DataTypeSystemType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_73(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 76u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DataTypeEncodingType"),
                opcua::types::LocalizedText::new("", "DataTypeEncodingType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_76(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 77u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "ModellingRuleType"),
                opcua::types::LocalizedText::new("", "ModellingRuleType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_919(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2299u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "StateMachineType"),
                opcua::types::LocalizedText::new("", "StateMachineType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2769u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2770u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_935(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2771u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "FiniteStateMachineType"),
                opcua::types::LocalizedText::new("", "FiniteStateMachineType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2772u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2773u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17635u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17636u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2299u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_946(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2307u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "StateType"),
                opcua::types::LocalizedText::new("", "StateType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2308u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_948(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2309u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "InitialStateType"),
                opcua::types::LocalizedText::new("", "InitialStateType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2307u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_949(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2310u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "TransitionType"),
                opcua::types::LocalizedText::new("", "TransitionType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2312u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_951(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15109u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "ChoiceStateType"),
                opcua::types::LocalizedText::new("", "ChoiceStateType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2307u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1334(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17597u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasDictionaryEntry"),
                opcua::types::LocalizedText::new("", "HasDictionaryEntry"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "DictionaryEntryOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1339(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17603u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasInterface"),
                opcua::types::LocalizedText::new("", "HasInterface"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "InterfaceOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1340(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17604u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasAddIn"),
                opcua::types::LocalizedText::new("", "HasAddIn"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "AddInOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1429(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32558u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEngineeringUnitDetails"),
                opcua::types::LocalizedText::new("", "HasEngineeringUnitDetails"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "EngineeringUnitDetailsOf",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1430(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32559u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasQuantity"),
                opcua::types::LocalizedText::new("", "HasQuantity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "QuantityOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1439(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9004u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasTrueSubState"),
                opcua::types::LocalizedText::new("", "HasTrueSubState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsTrueSubStateOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1440(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9005u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasFalseSubState"),
                opcua::types::LocalizedText::new("", "HasFalseSubState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsFalseSubStateOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1441(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16361u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasAlarmSuppressionGroup"),
                opcua::types::LocalizedText::new("", "HasAlarmSuppressionGroup"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "IsAlarmSuppressionGroupOf",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1442(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16362u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "AlarmGroupMember"),
                opcua::types::LocalizedText::new("", "AlarmGroupMember"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MemberOfAlarmGroup")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 35u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1443(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32059u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "AlarmSuppressionGroupMember"),
                opcua::types::LocalizedText::new("", "AlarmSuppressionGroupMember"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "MemberOfAlarmSuppressionGroup",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 16362u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1776(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9006u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasCondition"),
                opcua::types::LocalizedText::new("", "HasCondition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsConditionOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1777(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17276u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffectDisable"),
                opcua::types::LocalizedText::new("", "HasEffectDisable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeDisabledBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 54u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1778(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17983u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffectEnable"),
                opcua::types::LocalizedText::new("", "HasEffectEnable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeEnabledBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 54u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1779(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17984u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffectSuppressed"),
                opcua::types::LocalizedText::new("", "HasEffectSuppressed"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeSuppressedBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 54u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1780(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17985u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffectUnsuppressed"),
                opcua::types::LocalizedText::new("", "HasEffectUnsuppressed"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeUnsuppressedBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 54u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1928(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32633u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasCurrentData"),
                opcua::types::LocalizedText::new("", "HasCurrentData"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "HasHistoricalData")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1929(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32634u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasCurrentEvent"),
                opcua::types::LocalizedText::new("", "HasCurrentEvent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "HasHistoricalEvent")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_2785(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25345u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasPushedSecurityGroup"),
                opcua::types::LocalizedText::new("", "HasPushedSecurityGroup"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "HasPushTarget")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_3079(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14476u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasPubSubConnection"),
                opcua::types::LocalizedText::new("", "HasPubSubConnection"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "PubSubConnectionOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_3115(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14936u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "DataSetToWriter"),
                opcua::types::LocalizedText::new("", "DataSetToWriter"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "WriterToDataSet")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_33(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 31u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "References"),
                opcua::types::LocalizedText::new("", "References"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            true,
            None,
        )
        .into(),
        references: vec![],
    }
}
#[allow(unused)]
fn make_reference_type_3334(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15296u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasDataSetWriter"),
                opcua::types::LocalizedText::new("", "HasDataSetWriter"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsWriterInGroup")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_3335(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18804u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasWriterGroup"),
                opcua::types::LocalizedText::new("", "HasWriterGroup"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsWriterGroupOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_34(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "NonHierarchicalReferences"),
                opcua::types::LocalizedText::new("", "NonHierarchicalReferences"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            true,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 31u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_3405(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15297u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasDataSetReader"),
                opcua::types::LocalizedText::new("", "HasDataSetReader"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsReaderInGroup")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_3406(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18805u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasReaderGroup"),
                opcua::types::LocalizedText::new("", "HasReaderGroup"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsReaderGroupOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_35(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 33u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HierarchicalReferences"),
                opcua::types::LocalizedText::new("", "HierarchicalReferences"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            true,
            Some(opcua::types::LocalizedText::new(
                "",
                "InverseHierarchicalReferences",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 31u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_36(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 34u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasChild"),
                opcua::types::LocalizedText::new("", "HasChild"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            true,
            Some(opcua::types::LocalizedText::new("", "ChildOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_37(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 35u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "Organizes"),
                opcua::types::LocalizedText::new("", "Organizes"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "OrganizedBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_38(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 36u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEventSource"),
                opcua::types::LocalizedText::new("", "HasEventSource"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "EventSourceOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_3833(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23469u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "AliasFor"),
                opcua::types::LocalizedText::new("", "AliasFor"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "HasAlias")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_39(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 37u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasModellingRule"),
                opcua::types::LocalizedText::new("", "HasModellingRule"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "ModellingRuleOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_40(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 38u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEncoding"),
                opcua::types::LocalizedText::new("", "HasEncoding"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "EncodingOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_41(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 39u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasDescription"),
                opcua::types::LocalizedText::new("", "HasDescription"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "DescriptionOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4122(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25237u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "UsesPriorityMappingTable"),
                opcua::types::LocalizedText::new("", "UsesPriorityMappingTable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "UsedByNetworkInterface",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4123(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25238u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasLowerLayerInterface"),
                opcua::types::LocalizedText::new("", "HasLowerLayerInterface"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "HasHigherLayerInterface",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4124(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25253u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "IsExecutableOn"),
                opcua::types::LocalizedText::new("", "IsExecutableOn"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "CanExecute")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4125(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25254u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "Controls"),
                opcua::types::LocalizedText::new("", "Controls"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsControlledBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4126(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25255u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "Utilizes"),
                opcua::types::LocalizedText::new("", "Utilizes"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsUtilizedBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4127(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25265u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "IsExecutingOn"),
                opcua::types::LocalizedText::new("", "IsExecutingOn"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "Executes")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 25255u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4128(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25256u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "Requires"),
                opcua::types::LocalizedText::new("", "Requires"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsRequiredBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4129(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25257u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "IsPhysicallyConnectedTo"),
                opcua::types::LocalizedText::new("", "IsPhysicallyConnectedTo"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4130(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25258u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "RepresentsSameEntityAs"),
                opcua::types::LocalizedText::new("", "RepresentsSameEntityAs"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4131(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25259u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "RepresentsSameHardwareAs"),
                opcua::types::LocalizedText::new("", "RepresentsSameHardwareAs"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 25258u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4132(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25260u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "RepresentsSameFunctionalityAs"),
                opcua::types::LocalizedText::new("", "RepresentsSameFunctionalityAs"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 25258u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4133(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25261u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "IsHostedBy"),
                opcua::types::LocalizedText::new("", "IsHostedBy"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "Hosts")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 25255u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4134(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25262u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasPhysicalComponent"),
                opcua::types::LocalizedText::new("", "HasPhysicalComponent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "PhysicalComponentOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4135(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25263u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasContainedComponent"),
                opcua::types::LocalizedText::new("", "HasContainedComponent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "ContainedComponentOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 25262u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4136(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25264u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasAttachedComponent"),
                opcua::types::LocalizedText::new("", "HasAttachedComponent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "AttachedComponentOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 25262u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_4137(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32679u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasReferenceDescription"),
                opcua::types::LocalizedText::new("", "HasReferenceDescription"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "ReferenceDescriptionOf",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 34u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_42(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 40u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasTypeDefinition"),
                opcua::types::LocalizedText::new("", "HasTypeDefinition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "TypeDefinitionOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_43(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 41u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "GeneratesEvent"),
                opcua::types::LocalizedText::new("", "GeneratesEvent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "GeneratedBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_44(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3065u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "AlwaysGeneratesEvent"),
                opcua::types::LocalizedText::new("", "AlwaysGeneratesEvent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "AlwaysGeneratedBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 41u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_45(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 44u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "Aggregates"),
                opcua::types::LocalizedText::new("", "Aggregates"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            true,
            Some(opcua::types::LocalizedText::new("", "AggregatedBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 34u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_46(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 45u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasSubtype"),
                opcua::types::LocalizedText::new("", "HasSubtype"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "SubtypeOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 34u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_47(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 46u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasProperty"),
                opcua::types::LocalizedText::new("", "HasProperty"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "PropertyOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 44u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_48(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 47u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasComponent"),
                opcua::types::LocalizedText::new("", "HasComponent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "ComponentOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 44u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_49(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 48u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasNotifier"),
                opcua::types::LocalizedText::new("", "HasNotifier"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "NotifierOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 36u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_50(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 49u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasOrderedComponent"),
                opcua::types::LocalizedText::new("", "HasOrderedComponent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "OrderedComponentOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_51(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 51u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "FromState"),
                opcua::types::LocalizedText::new("", "FromState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "ToTransition")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_52(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 52u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "ToState"),
                opcua::types::LocalizedText::new("", "ToState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "FromTransition")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_53(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 53u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasCause"),
                opcua::types::LocalizedText::new("", "HasCause"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeCausedBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_54(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 54u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffect"),
                opcua::types::LocalizedText::new("", "HasEffect"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeEffectedBy")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_55(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 117u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasSubStateMachine"),
                opcua::types::LocalizedText::new("", "HasSubStateMachine"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "SubStateMachineOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_56(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 56u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasHistoricalConfiguration"),
                opcua::types::LocalizedText::new("", "HasHistoricalConfiguration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "HistoricalConfigurationOf",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 44u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_57(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24136u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasStructuredComponent"),
                opcua::types::LocalizedText::new("", "HasStructuredComponent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "IsStructuredComponentOf",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_58(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24137u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "AssociatedWith"),
                opcua::types::LocalizedText::new("", "AssociatedWith"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_59(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32407u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasKeyValueDescription"),
                opcua::types::LocalizedText::new("", "HasKeyValueDescription"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "KeyValueDescriptionOf",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_910(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23562u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "IsDeprecated"),
                opcua::types::LocalizedText::new("", "IsDeprecated"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "Deprecates")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_92(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 129u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasArgumentDescription"),
                opcua::types::LocalizedText::new("", "HasArgumentDescription"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "ArgumentDescriptionOf",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_93(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 131u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasOptionalInputArgumentDescription"),
                opcua::types::LocalizedText::new("", "HasOptionalInputArgumentDescription"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "OptionalInputArgumentDescriptionOf",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 129u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_952(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15112u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasGuard"),
                opcua::types::LocalizedText::new("", "HasGuard"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "GuardOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_variable_100(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15963u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StaticNumericNodeIdRange"),
                opcua::types::LocalizedText::new("", "StaticNumericNodeIdRange"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 291u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                "1:2252",
                "2270",
                "2273",
                "2280",
                "2283",
                "2291:2293",
                "2297:2734",
                "2738:2991",
                "2995",
                "2998:3703",
                "3710:11191",
                "11194:11195",
                "11202:11241",
                "11243:11272",
                "11276:11280",
                "11284:11311",
                "11315:11491",
                "11495:11501",
                "11503:11701",
                "11706",
                "11708",
                "11716:12164",
                "12169:12748",
                "12752:12872",
                "12875:12884",
                "12888:12910",
                "12912:14414",
                "14416:15003",
                "15005:15605",
                "15607:16300",
                "16306:17633",
                "17635:19090",
                "19092:24094",
                "24102:24103",
                "24105:31915",
                "31917:2147483647",
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1008(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2774u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Transition"),
                opcua::types::LocalizedText::new("", "Transition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3754u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2762u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1009(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3754u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 24u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2774u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_101(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15964u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StaticStringNodeIdPattern"),
                opcua::types::LocalizedText::new("", "StaticStringNodeIdPattern"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from("")),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1010(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2775u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "FromState"),
                opcua::types::LocalizedText::new("", "FromState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3746u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2755u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1011(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3746u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 24u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2775u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1012(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2776u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ToState"),
                opcua::types::LocalizedText::new("", "ToState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3750u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2755u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
