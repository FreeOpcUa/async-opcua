// This file was autogenerated from schemas/1.05/Opc.Ua.NodeSet2.xml by async-opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use opcua_nodes as nodes;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_variable_289 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_variable_2890,
            &make_variable_2891,
            &make_variable_2893,
            &make_variable_2895,
            &make_variable_2896,
            &make_variable_2897,
            &make_variable_2898,
            &make_variable_2899,
            &make_variable_290,
            &make_variable_2900,
            &make_variable_2901,
            &make_variable_2902,
            &make_variable_2903,
            &make_variable_2905,
            &make_variable_2907,
            &make_variable_2908,
            &make_variable_2909,
            &make_variable_291,
            &make_variable_2910,
            &make_variable_2911,
            &make_variable_2912,
            &make_variable_2913,
            &make_variable_2914,
            &make_variable_2915,
            &make_variable_2916,
            &make_variable_2917,
            &make_variable_2918,
            &make_variable_2919,
            &make_variable_292,
            &make_variable_2920,
            &make_variable_2921,
            &make_variable_2922,
            &make_variable_2923,
            &make_variable_2924,
            &make_variable_2925,
            &make_variable_2926,
            &make_variable_2927,
            &make_variable_2928,
            &make_variable_2929,
            &make_variable_293,
            &make_variable_2930,
            &make_variable_2932,
            &make_variable_2933,
            &make_variable_2934,
            &make_variable_2935,
            &make_variable_2936,
            &make_variable_2937,
            &make_variable_2938,
            &make_variable_2939,
            &make_variable_294,
            &make_variable_2941,
            &make_variable_2942,
            &make_variable_2943,
            &make_variable_2944,
            &make_variable_2945,
            &make_variable_2946,
            &make_variable_2948,
            &make_variable_2949,
            &make_variable_295,
            &make_variable_2950,
            &make_variable_2951,
            &make_variable_2952,
            &make_variable_2953,
            &make_variable_2956,
            &make_variable_2957,
            &make_variable_2959,
            &make_variable_296,
            &make_variable_2960,
            &make_variable_2963,
            &make_variable_2964,
            &make_variable_2966,
            &make_variable_2969,
            &make_variable_297,
            &make_variable_2970,
            &make_variable_2972,
            &make_variable_2974,
            &make_variable_2976,
            &make_variable_2977,
            &make_variable_2979,
            &make_variable_298,
            &make_variable_2983,
            &make_variable_2984,
            &make_variable_2985,
            &make_variable_2986,
            &make_variable_2988,
            &make_variable_2989,
            &make_variable_299,
            &make_variable_2991,
            &make_variable_2993,
            &make_variable_2994,
            &make_variable_2996,
            &make_variable_2998,
            &make_variable_2999,
            &make_variable_300,
            &make_variable_3001,
            &make_variable_3003,
            &make_variable_3004,
            &make_variable_3006,
            &make_variable_3007,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_variable_289(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12138u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "QueryFirstCount"),
                opcua::types::LocalizedText::new("", "QueryFirstCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12098u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2890(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25430u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 1u32),
                    description: Default::default(),
                    name: "RequireCompleteUpdate".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 25519u32),
                    description: Default::default(),
                    name: "ConfigurationReferences".into(),
                    value_rank: 1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![3u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25429u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2891(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25431u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 1u32),
                    description: Default::default(),
                    name: "ChangesApplied".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 19u32),
                    description: Default::default(),
                    name: "ReferencesResults".into(),
                    value_rank: 1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 25520u32),
                    description: Default::default(),
                    name: "ConfigurationValues".into(),
                    value_rank: 1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "ConfigurationObjects".into(),
                    value_rank: 1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![4u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25429u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2893(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15845u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "State"),
                opcua::types::LocalizedText::new("", "State"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 14647u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15844u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2895(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18716u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18715u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2896(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18717u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TotalInformation"),
                opcua::types::LocalizedText::new("", "TotalInformation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18718u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18719u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18720u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18715u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2897(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18718u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18717u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2898(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18719u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18717u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2899(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18720u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18717u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_290(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12139u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "QueryNextCount"),
                opcua::types::LocalizedText::new("", "QueryNextCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12098u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2900(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18722u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TotalError"),
                opcua::types::LocalizedText::new("", "TotalError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18723u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18724u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18725u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18715u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2901(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18723u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18722u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2902(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18724u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18722u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2903(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18725u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18722u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2905(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18728u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SubError"),
                opcua::types::LocalizedText::new("", "SubError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18715u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2907(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18730u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateError"),
                opcua::types::LocalizedText::new("", "StateError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18731u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18732u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18733u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18729u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2908(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18731u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18730u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2909(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18732u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(1i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18730u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_291(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12140u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "RegisterNodesCount"),
                opcua::types::LocalizedText::new("", "RegisterNodesCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12098u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2910(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18733u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18730u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2911(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18735u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateOperationalByMethod"),
                opcua::types::LocalizedText::new("", "StateOperationalByMethod"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18736u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18737u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18738u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18729u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2912(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18736u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18735u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2913(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18737u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18735u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2914(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18738u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18735u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2915(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18740u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateOperationalByParent"),
                opcua::types::LocalizedText::new("", "StateOperationalByParent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18741u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18742u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18743u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18729u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2916(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18741u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18740u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2917(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18742u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18740u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2918(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18743u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18740u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2919(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18745u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateOperationalFromError"),
                opcua::types::LocalizedText::new("", "StateOperationalFromError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18746u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18747u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18748u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18729u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_292(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12141u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "UnregisterNodesCount"),
                opcua::types::LocalizedText::new("", "UnregisterNodesCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12098u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2920(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18746u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18745u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2921(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18747u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18745u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2922(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18748u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18745u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2923(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18750u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StatePausedByParent"),
                opcua::types::LocalizedText::new("", "StatePausedByParent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18751u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18752u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18753u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18729u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2924(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18751u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18750u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2925(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18752u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18750u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2926(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18753u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18750u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2927(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18755u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateDisabledByMethod"),
                opcua::types::LocalizedText::new("", "StateDisabledByMethod"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18756u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18757u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18758u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18729u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2928(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18756u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18755u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2929(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18757u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18755u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_293(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12142u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SessionSecurityDiagnostics"),
                opcua::types::LocalizedText::new("", "SessionSecurityDiagnostics"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 868u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12143u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12144u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12145u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12146u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12147u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12148u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12149u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12151u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2244u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12097u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2930(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18758u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18755u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2932(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18761u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ConfiguredDataSetWriters"),
                opcua::types::LocalizedText::new("", "ConfiguredDataSetWriters"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18762u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18760u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2933(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18762u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18761u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2934(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18763u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ConfiguredDataSetReaders"),
                opcua::types::LocalizedText::new("", "ConfiguredDataSetReaders"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18764u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18760u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2935(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18764u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18763u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2936(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18765u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OperationalDataSetWriters"),
                opcua::types::LocalizedText::new("", "OperationalDataSetWriters"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18766u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18760u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2937(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18766u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18765u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2938(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18767u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OperationalDataSetReaders"),
                opcua::types::LocalizedText::new("", "OperationalDataSetReaders"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18768u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18760u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2939(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18768u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18767u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_294(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12143u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SessionId"),
                opcua::types::LocalizedText::new("", "SessionId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2941(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23643u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxPubSubConnections"),
                opcua::types::LocalizedText::new("", "MaxPubSubConnections"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23642u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2942(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23644u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxWriterGroups"),
                opcua::types::LocalizedText::new("", "MaxWriterGroups"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23642u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2943(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23645u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxReaderGroups"),
                opcua::types::LocalizedText::new("", "MaxReaderGroups"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23642u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2944(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23646u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxDataSetWriters"),
                opcua::types::LocalizedText::new("", "MaxDataSetWriters"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23642u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2945(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23647u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxDataSetReaders"),
                opcua::types::LocalizedText::new("", "MaxDataSetReaders"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23642u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2946(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23648u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxFieldsPerDataSet"),
                opcua::types::LocalizedText::new("", "MaxFieldsPerDataSet"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23642u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2948(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24009u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "<DataSetName>"),
                opcua::types::LocalizedText::new("", "<DataSetName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 14523u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23649u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2949(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17479u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SupportedTransportProfiles"),
                opcua::types::LocalizedText::new("", "SupportedTransportProfiles"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14416u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_295(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12144u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ClientUserIdOfSession"),
                opcua::types::LocalizedText::new("", "ClientUserIdOfSession"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2950(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25432u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DefaultDatagramPublisherId"),
                opcua::types::LocalizedText::new("", "DefaultDatagramPublisherId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 9u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14416u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2951(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25433u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ConfigurationVersion"),
                opcua::types::LocalizedText::new("", "ConfigurationVersion"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 20998u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14416u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2952(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32396u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DefaultSecurityKeyServices"),
                opcua::types::LocalizedText::new("", "DefaultSecurityKeyServices"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 312u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14416u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2953(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32397u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ConfigurationProperties"),
                opcua::types::LocalizedText::new("", "ConfigurationProperties"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 14533u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14416u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2956(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15216u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "SecurityGroupId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 288u32),
                    description: Default::default(),
                    name: "StartingTokenId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "RequestedKeyCount".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![3u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15215u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2957(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15217u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "SecurityPolicyUri".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 288u32),
                    description: Default::default(),
                    name: "FirstTokenId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 15u32),
                    description: Default::default(),
                    name: "Keys".into(),
                    value_rank: 1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 290u32),
                    description: Default::default(),
                    name: "TimeToNextKey".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 290u32),
                    description: Default::default(),
                    name: "KeyLifetime".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![5u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15215u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2959(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15441u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "SecurityGroupId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15440u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_296(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12145u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ClientUserIdHistory"),
                opcua::types::LocalizedText::new("", "ClientUserIdHistory"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2960(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15442u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "SecurityGroupNodeId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15440u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2963(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15445u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "SecurityGroupName".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 290u32),
                    description: Default::default(),
                    name: "KeyLifetime".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "SecurityPolicyUri".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "MaxFutureKeyCount".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "MaxPastKeyCount".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![5u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15444u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2964(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15446u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "SecurityGroupId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "SecurityGroupNodeId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![2u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15444u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2966(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15448u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "SecurityGroupNodeId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15447u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2969(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25442u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "ApplicationUri".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "EndpointUrl".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "SecurityPolicyUri".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 304u32),
                    description: Default::default(),
                    name: "UserTokenType".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 5u32),
                    description: Default::default(),
                    name: "RequestedKeyCount".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 290u32),
                    description: Default::default(),
                    name: "RetryInterval".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![6u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25441u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_297(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12146u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "AuthenticationMechanism"),
                opcua::types::LocalizedText::new("", "AuthenticationMechanism"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2970(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25443u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "PushTargetId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25441u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2972(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25445u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "PushTargetId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25444u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2974(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17365u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "SecurityGroupId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "SecurityPolicyUri".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 288u32),
                    description: Default::default(),
                    name: "CurrentTokenId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15u32),
                    description: Default::default(),
                    name: "CurrentKey".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 15u32),
                    description: Default::default(),
                    name: "FutureKeys".into(),
                    value_rank: 1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 290u32),
                    description: Default::default(),
                    name: "TimeToNextKey".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 290u32),
                    description: Default::default(),
                    name: "KeyLifetime".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![7u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17364u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2976(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17367u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15617u32),
                    description: Default::default(),
                    name: "Configuration".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17366u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2977(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17368u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "ConnectionId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17366u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2979(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17370u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "ConnectionId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17369u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_298(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12147u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Encoding"),
                opcua::types::LocalizedText::new("", "Encoding"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2983(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25452u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Size"),
                opcua::types::LocalizedText::new("", "Size"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 9u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25451u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2984(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25453u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Writable"),
                opcua::types::LocalizedText::new("", "Writable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25451u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2985(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25454u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "UserWritable"),
                opcua::types::LocalizedText::new("", "UserWritable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25451u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2986(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25455u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OpenCount"),
                opcua::types::LocalizedText::new("", "OpenCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25451u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2988(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25460u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 3u32),
                    description: Default::default(),
                    name: "Mode".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25459u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2989(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25461u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25459u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_299(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12148u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransportProtocol"),
                opcua::types::LocalizedText::new("", "TransportProtocol"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2991(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25463u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25462u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2993(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25465u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 6u32),
                    description: Default::default(),
                    name: "Length".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![2u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25464u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2994(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25466u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15u32),
                    description: Default::default(),
                    name: "Data".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25464u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2996(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25468u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15u32),
                    description: Default::default(),
                    name: "Data".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![2u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25467u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2998(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25470u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25469u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_2999(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25471u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 9u32),
                    description: Default::default(),
                    name: "Position".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25469u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_300(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12149u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SecurityMode"),
                opcua::types::LocalizedText::new("", "SecurityMode"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 302u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3001(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25473u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 9u32),
                    description: Default::default(),
                    name: "Position".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![2u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25472u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3003(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25475u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "TransportProfileUri".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 5u32),
                    description: Default::default(),
                    name: "NumReqWriterGroupIds".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 5u32),
                    description: Default::default(),
                    name: "NumReqDataSetWriterIds".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![3u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25474u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3004(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25476u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 24u32),
                    description: Default::default(),
                    name: "DefaultPublisherId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 5u32),
                    description: Default::default(),
                    name: "WriterGroupIds".into(),
                    value_rank: 1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 5u32),
                    description: Default::default(),
                    name: "DataSetWriterIds".into(),
                    value_rank: 1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![3u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25474u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3006(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25478u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 1u32),
                    description: Default::default(),
                    name: "RequireCompleteUpdate".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 25519u32),
                    description: Default::default(),
                    name: "ConfigurationReferences".into(),
                    value_rank: 1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![3u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25477u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3007(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25479u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 1u32),
                    description: Default::default(),
                    name: "ChangesApplied".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 19u32),
                    description: Default::default(),
                    name: "ReferencesResults".into(),
                    value_rank: 1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 25520u32),
                    description: Default::default(),
                    name: "ConfigurationValues".into(),
                    value_rank: 1i32,
                }),
                opcua::types::ExtensionObject::from_message(opcua::types::Argument {
                    array_dimensions: Some(vec![0u32]),
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "ConfigurationObjects".into(),
                    value_rank: 1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![4u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25477u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
