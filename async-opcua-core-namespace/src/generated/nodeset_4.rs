// This file was autogenerated from schemas/1.05/Opc.Ua.NodeSet2.xml by async-opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use opcua_nodes as nodes;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_method_1070 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_method_1072,
            &make_method_1077,
            &make_method_1080,
            &make_method_1083,
            &make_method_1089,
            &make_method_1119,
            &make_method_1123,
            &make_method_1126,
            &make_method_1135,
            &make_method_1137,
            &make_method_1139,
            &make_method_1141,
            &make_method_1143,
            &make_method_1145,
            &make_method_1164,
            &make_method_1166,
            &make_method_1168,
            &make_method_1170,
            &make_method_1172,
            &make_method_1174,
            &make_method_1183,
            &make_method_1185,
            &make_method_1187,
            &make_method_1189,
            &make_method_1191,
            &make_method_1193,
            &make_method_1202,
            &make_method_1204,
            &make_method_1206,
            &make_method_1208,
            &make_method_1210,
            &make_method_1212,
            &make_method_1221,
            &make_method_1223,
            &make_method_1225,
            &make_method_1227,
            &make_method_1229,
            &make_method_1231,
            &make_method_1240,
            &make_method_1242,
            &make_method_1244,
            &make_method_1246,
            &make_method_1248,
            &make_method_1250,
            &make_method_1259,
            &make_method_1261,
            &make_method_1263,
            &make_method_1265,
            &make_method_1267,
            &make_method_1269,
            &make_method_1278,
            &make_method_1280,
            &make_method_1282,
            &make_method_1284,
            &make_method_1286,
            &make_method_1288,
            &make_method_1297,
            &make_method_1299,
            &make_method_1301,
            &make_method_1303,
            &make_method_1305,
            &make_method_1307,
            &make_method_1316,
            &make_method_1318,
            &make_method_1320,
            &make_method_1322,
            &make_method_1324,
            &make_method_1326,
            &make_method_1467,
            &make_method_1468,
            &make_method_1469,
            &make_method_1471,
            &make_method_1473,
            &make_method_1489,
            &make_method_1491,
            &make_method_1506,
            &make_method_1508,
            &make_method_1538,
            &make_method_1540,
            &make_method_1541,
            &make_method_1563,
            &make_method_1564,
            &make_method_1565,
            &make_method_1567,
            &make_method_1568,
            &make_method_1570,
            &make_method_1571,
            &make_method_1573,
            &make_method_1574,
            &make_method_1576,
            &make_method_1577,
            &make_method_1579,
            &make_method_1605,
            &make_method_1606,
            &make_method_1607,
            &make_method_1611,
            &make_method_1641,
            &make_method_1643,
            &make_method_1645,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_method_1070(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16354u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Delete"),
                opcua::types::LocalizedText::new("", "Delete"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16355u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1072(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16356u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "MoveOrCopy"),
                opcua::types::LocalizedText::new("", "MoveOrCopy"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16357u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16358u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1077(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15746u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GenerateFileForRead"),
                opcua::types::LocalizedText::new("", "GenerateFileForRead"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15747u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15748u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1080(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15749u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GenerateFileForWrite"),
                opcua::types::LocalizedText::new("", "GenerateFileForWrite"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16359u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15750u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1083(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15751u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CloseAndCommit"),
                opcua::types::LocalizedText::new("", "CloseAndCommit"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15752u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15753u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1089(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15794u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15754u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1119(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15843u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1123(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15997u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddRole"),
                opcua::types::LocalizedText::new("", "AddRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15998u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15999u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15607u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1126(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16000u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveRole"),
                opcua::types::LocalizedText::new("", "RemoveRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16001u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15607u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1135(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15624u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15625u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1137(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15626u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15627u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1139(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16176u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16177u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1141(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16178u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16179u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1143(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16180u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16181u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1145(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16182u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16183u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1164(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15672u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15673u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1166(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15674u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15675u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1168(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16217u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16218u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1170(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16219u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16220u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1172(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16221u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16222u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1174(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16223u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16224u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1183(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15684u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15685u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1185(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15686u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15687u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1187(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16228u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16229u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1189(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16230u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16231u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1191(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16232u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16233u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1193(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16234u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16235u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1202(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16041u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16042u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1204(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16043u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16044u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1206(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16239u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16240u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1208(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16241u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16242u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1210(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16243u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16244u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1212(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16245u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16246u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1221(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15696u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15697u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1223(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15698u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15699u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1225(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16250u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16251u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1227(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16252u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16253u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1229(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16254u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16255u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1231(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16256u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16257u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1240(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15720u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15721u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1242(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15722u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15723u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1244(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16272u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16273u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1246(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16274u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16275u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1248(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16276u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16277u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1250(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16278u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16279u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1259(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15708u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15709u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1261(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15710u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15711u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1263(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16261u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16262u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1265(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16263u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16264u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1267(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16265u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16266u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1269(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16267u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16268u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1278(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25572u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25573u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25565u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1280(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25574u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25575u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25565u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1282(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25576u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25577u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25565u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1284(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25578u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25579u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25565u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1286(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25580u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25581u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25565u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1288(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25582u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25583u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25565u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1297(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25610u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25611u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25603u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1299(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25612u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25613u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25603u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1301(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25614u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25615u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25603u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1303(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25616u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25617u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25603u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1305(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25618u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25619u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25603u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1307(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25620u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25621u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25603u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1316(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25591u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25592u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25584u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1318(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25593u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25594u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25584u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1320(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25595u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25596u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25584u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1322(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25597u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25598u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25584u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1324(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25599u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25600u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25584u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1326(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 25601u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25602u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25584u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1467(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9028u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Disable"),
                opcua::types::LocalizedText::new("", "Disable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1468(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9027u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Enable"),
                opcua::types::LocalizedText::new("", "Enable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1469(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9029u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddComment"),
                opcua::types::LocalizedText::new("", "AddComment"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9030u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2829u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1471(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3875u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "ConditionRefresh"),
                opcua::types::LocalizedText::new("", "ConditionRefresh"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3876u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2787u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2788u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1473(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12912u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "ConditionRefresh2"),
                opcua::types::LocalizedText::new("", "ConditionRefresh2"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12913u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2787u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2788u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1489(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9069u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Respond"),
                opcua::types::LocalizedText::new("", "Respond"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9070u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8927u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2830u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1491(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24312u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Respond2"),
                opcua::types::LocalizedText::new("", "Respond2"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24313u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8927u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2830u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1506(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9111u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Acknowledge"),
                opcua::types::LocalizedText::new("", "Acknowledge"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9112u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8944u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2881u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1508(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9113u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Confirm"),
                opcua::types::LocalizedText::new("", "Confirm"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9114u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8961u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2881u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1538(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9213u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "TimedShelve"),
                opcua::types::LocalizedText::new("", "TimedShelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9214u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9178u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1540(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9211u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Unshelve"),
                opcua::types::LocalizedText::new("", "Unshelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9178u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1541(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9212u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OneShotShelve"),
                opcua::types::LocalizedText::new("", "OneShotShelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9178u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1563(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16402u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Silence"),
                opcua::types::LocalizedText::new("", "Silence"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17242u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1564(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16403u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Suppress"),
                opcua::types::LocalizedText::new("", "Suppress"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17225u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1565(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24316u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Suppress2"),
                opcua::types::LocalizedText::new("", "Suppress2"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24317u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17225u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1567(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17868u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Unsuppress"),
                opcua::types::LocalizedText::new("", "Unsuppress"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17225u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1568(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24318u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Unsuppress2"),
                opcua::types::LocalizedText::new("", "Unsuppress2"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24319u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17225u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1570(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17869u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveFromService"),
                opcua::types::LocalizedText::new("", "RemoveFromService"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17259u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1571(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24320u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveFromService2"),
                opcua::types::LocalizedText::new("", "RemoveFromService2"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24321u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17259u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1573(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17870u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "PlaceInService"),
                opcua::types::LocalizedText::new("", "PlaceInService"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17259u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1574(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24322u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "PlaceInService2"),
                opcua::types::LocalizedText::new("", "PlaceInService2"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24323u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17259u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1576(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18199u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15013u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1577(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24324u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset2"),
                opcua::types::LocalizedText::new("", "Reset2"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24325u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15013u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1579(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24744u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetGroupMemberships"),
                opcua::types::LocalizedText::new("", "GetGroupMemberships"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 25154u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1605(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16439u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Disable"),
                opcua::types::LocalizedText::new("", "Disable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1606(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16440u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Enable"),
                opcua::types::LocalizedText::new("", "Enable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1607(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16441u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddComment"),
                opcua::types::LocalizedText::new("", "AddComment"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16442u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2829u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1611(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16461u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Acknowledge"),
                opcua::types::LocalizedText::new("", "Acknowledge"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16462u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8944u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1641(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2949u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "TimedShelve"),
                opcua::types::LocalizedText::new("", "TimedShelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2991u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2935u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2945u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1643(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24756u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "TimedShelve2"),
                opcua::types::LocalizedText::new("", "TimedShelve2"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24757u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2935u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2945u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1645(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2947u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Unshelve"),
                opcua::types::LocalizedText::new("", "Unshelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2940u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2943u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
