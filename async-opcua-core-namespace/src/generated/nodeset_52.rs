// This file was autogenerated from schemas/1.05/Opc.Ua.NodeSet2.xml by async-opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use opcua_nodes as nodes;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_variable_type_787 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_variable_type_924,
            &make_variable_type_929,
            &make_variable_type_942,
            &make_variable_type_944,
            &make_variable_type_953,
            &make_variable_type_954,
            &make_variable_type_956,
            &make_variable_type_957,
            &make_variable_type_960,
            &make_variable_type_962,
            &make_variable_type_966,
            &make_variable_type_968,
            &make_variable_type_972,
            &make_variable_type_974,
            &make_variable_type_978,
            &make_variable_type_984,
            &make_variable_type_993,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_variable_type_787(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17986u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "AudioVariableType"),
                opcua::types::LocalizedText::new("", "AudioVariableType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 16307u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17988u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17989u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17990u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_924(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2755u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "StateVariableType"),
                opcua::types::LocalizedText::new("", "StateVariableType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2756u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2757u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2758u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2759u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_929(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2762u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "TransitionVariableType"),
                opcua::types::LocalizedText::new("", "TransitionVariableType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2763u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2764u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2765u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2766u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11456u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_942(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2760u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "FiniteStateVariableType"),
                opcua::types::LocalizedText::new("", "FiniteStateVariableType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2761u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2755u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_944(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2767u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "FiniteTransitionVariableType"),
                opcua::types::LocalizedText::new("", "FiniteTransitionVariableType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2768u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2762u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_953(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15113u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "GuardVariableType"),
                opcua::types::LocalizedText::new("", "GuardVariableType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 63u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_variable_type_954(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15128u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "ExpressionGuardVariableType"),
                opcua::types::LocalizedText::new("", "ExpressionGuardVariableType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15129u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15113u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_956(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15317u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "ElseGuardVariableType"),
                opcua::types::LocalizedText::new("", "ElseGuardVariableType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 15113u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_variable_type_957(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17709u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "RationalNumberType"),
                opcua::types::LocalizedText::new("", "RationalNumberType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 18806u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17712u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17713u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_960(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17714u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "VectorType"),
                opcua::types::LocalizedText::new("", "VectorType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 18807u32),
            true,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17715u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_962(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17716u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "3DVectorType"),
                opcua::types::LocalizedText::new("", "3DVectorType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 18808u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18769u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18770u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18771u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17714u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_966(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18772u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "CartesianCoordinatesType"),
                opcua::types::LocalizedText::new("", "CartesianCoordinatesType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 18809u32),
            true,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18773u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_968(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18774u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "3DCartesianCoordinatesType"),
                opcua::types::LocalizedText::new("", "3DCartesianCoordinatesType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 18810u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18776u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18777u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18778u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18772u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_972(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18779u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "OrientationType"),
                opcua::types::LocalizedText::new("", "OrientationType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 18811u32),
            true,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18780u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_974(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18781u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "3DOrientationType"),
                opcua::types::LocalizedText::new("", "3DOrientationType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 18812u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18783u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18785u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18779u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_978(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18786u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "FrameType"),
                opcua::types::LocalizedText::new("", "FrameType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 18813u32),
            true,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18801u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18787u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18788u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18789u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18790u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_984(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18791u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "3DFrameType"),
                opcua::types::LocalizedText::new("", "3DFrameType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 18814u32),
            false,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18796u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18792u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18786u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_type_993(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32431u32),
                opcua::types::NodeClass::VariableType,
                opcua::types::QualifiedName::new(0u16, "BitFieldType"),
                opcua::types::LocalizedText::new("", "BitFieldType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 28u32),
            true,
            -1i32,
            Some(opcua::types::DataValue::null()),
            None,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32432u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32433u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15014u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
