// This file was autogenerated from schemas/1.05/Opc.Ua.NodeSet2.xml by async-opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use opcua_nodes as nodes;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_method_429 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_method_432,
            &make_method_434,
            &make_method_437,
            &make_method_439,
            &make_method_442,
            &make_method_841,
            &make_method_844,
            &make_method_880,
            &make_method_883,
            &make_method_885,
            &make_method_888,
            &make_object_0,
            &make_object_1,
            &make_object_1020,
            &make_object_1032,
            &make_object_1063,
            &make_object_1086,
            &make_object_1091,
            &make_object_1093,
            &make_object_1095,
            &make_object_1097,
            &make_object_1099,
            &make_object_1101,
            &make_object_1103,
            &make_object_1105,
            &make_object_1107,
            &make_object_1109,
            &make_object_1111,
            &make_object_1113,
            &make_object_1115,
            &make_object_1117,
            &make_object_1121,
            &make_object_1151,
            &make_object_1153,
            &make_object_1155,
            &make_object_1157,
            &make_object_1176,
            &make_object_1195,
            &make_object_1214,
            &make_object_1233,
            &make_object_1252,
            &make_object_1271,
            &make_object_1290,
            &make_object_1309,
            &make_object_1329,
            &make_object_1331,
            &make_object_1332,
            &make_object_1333,
            &make_object_1338,
            &make_object_1346,
            &make_object_1402,
            &make_object_1403,
            &make_object_1407,
            &make_object_1419,
            &make_object_1420,
            &make_object_1425,
            &make_object_1427,
            &make_object_1428,
            &make_object_152,
            &make_object_1531,
            &make_object_1554,
            &make_object_1560,
            &make_object_1582,
            &make_object_160,
            &make_object_161,
            &make_object_162,
            &make_object_1623,
            &make_object_1625,
            &make_object_1627,
            &make_object_1629,
            &make_object_1631,
            &make_object_1633,
            &make_object_1635,
            &make_object_1637,
            &make_object_1639,
            &make_object_1669,
            &make_object_1671,
            &make_object_1673,
            &make_object_1675,
            &make_object_1677,
            &make_object_1679,
            &make_object_1681,
            &make_object_1683,
            &make_object_1688,
            &make_object_177,
            &make_object_181,
            &make_object_182,
            &make_object_1833,
            &make_object_1834,
            &make_object_1836,
            &make_object_1838,
            &make_object_184,
            &make_object_1840,
            &make_object_1842,
            &make_object_1844,
            &make_object_1846,
            &make_object_1848,
            &make_object_1850,
            &make_object_1852,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_method_429(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11629u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11630u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11631u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11624u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_432(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11632u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11633u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11624u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_434(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11634u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11635u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11636u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11624u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_437(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11637u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11638u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11624u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_439(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11639u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11640u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11641u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11624u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_442(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11642u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11643u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11624u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_841(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16301u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddRole"),
                opcua::types::LocalizedText::new("", "AddRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16302u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16303u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15606u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_844(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16304u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveRole"),
                opcua::types::LocalizedText::new("", "RemoveRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16305u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15606u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_880(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11492u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetMonitoredItems"),
                opcua::types::LocalizedText::new("", "GetMonitoredItems"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11493u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11494u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2253u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_883(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12873u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "ResendData"),
                opcua::types::LocalizedText::new("", "ResendData"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12874u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2253u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_885(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12749u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetSubscriptionDurable"),
                opcua::types::LocalizedText::new("", "SetSubscriptionDurable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12750u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12751u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2253u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_888(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12886u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RequestServerStateChange"),
                opcua::types::LocalizedText::new("", "RequestServerStateChange"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12887u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2253u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_0(ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3062u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default Binary"),
                opcua::types::LocalizedText::new("", "Default Binary"),
                Some(opcua::types::LocalizedText::new(
                    "",
                    "The default binary encoding for a data type.",
                )),
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 40u32),
            is_forward: true,
        }],
    }
}
#[allow(unused)]
fn make_object_1(ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3063u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default XML"),
                opcua::types::LocalizedText::new("", "Default XML"),
                Some(opcua::types::LocalizedText::new(
                    "",
                    "The default XML encoding for a data type.",
                )),
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 40u32),
            is_forward: true,
        }],
    }
}
#[allow(unused)]
fn make_object_1020(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13354u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<FileDirectoryName>"),
                opcua::types::LocalizedText::new("", "<FileDirectoryName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13355u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13358u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17718u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13363u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 35u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1032(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13366u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<FileName>"),
                opcua::types::LocalizedText::new("", "<FileName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13367u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13368u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13369u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13370u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13372u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13375u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13377u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13380u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13382u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13385u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11575u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 35u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1063(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16314u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "FileSystem"),
                opcua::types::LocalizedText::new("", "FileSystem"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16348u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16351u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16354u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16356u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1086(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15754u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<TransferState>"),
                opcua::types::LocalizedText::new("", "<TransferState>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15755u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15794u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1091(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15815u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Idle"),
                opcua::types::LocalizedText::new("", "Idle"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15816u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15825u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15829u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15831u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15833u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15841u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2309u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1093(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15817u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ReadPrepare"),
                opcua::types::LocalizedText::new("", "ReadPrepare"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15818u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15825u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15827u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15835u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1095(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15819u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ReadTransfer"),
                opcua::types::LocalizedText::new("", "ReadTransfer"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15820u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15827u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15829u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15837u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1097(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15821u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ApplyWrite"),
                opcua::types::LocalizedText::new("", "ApplyWrite"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15822u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15831u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15833u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15839u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1099(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15823u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Error"),
                opcua::types::LocalizedText::new("", "Error"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15824u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15835u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15837u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15839u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15841u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1101(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15825u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "IdleToReadPrepare"),
                opcua::types::LocalizedText::new("", "IdleToReadPrepare"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15826u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15815u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15817u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1103(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15827u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ReadPrepareToReadTransfer"),
                opcua::types::LocalizedText::new("", "ReadPrepareToReadTransfer"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15828u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15817u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15819u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1105(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15829u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ReadTransferToIdle"),
                opcua::types::LocalizedText::new("", "ReadTransferToIdle"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15830u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15819u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15815u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1107(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15831u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "IdleToApplyWrite"),
                opcua::types::LocalizedText::new("", "IdleToApplyWrite"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15832u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15815u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15821u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1109(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15833u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ApplyWriteToIdle"),
                opcua::types::LocalizedText::new("", "ApplyWriteToIdle"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15834u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15821u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15815u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1111(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15835u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ReadPrepareToError"),
                opcua::types::LocalizedText::new("", "ReadPrepareToError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15836u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15817u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15823u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1113(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15837u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ReadTransferToError"),
                opcua::types::LocalizedText::new("", "ReadTransferToError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15838u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15819u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15823u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1115(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15839u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ApplyWriteToError"),
                opcua::types::LocalizedText::new("", "ApplyWriteToError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15840u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15821u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15823u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1117(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15841u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ErrorToIdle"),
                opcua::types::LocalizedText::new("", "ErrorToIdle"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15842u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15823u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15815u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2311u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1121(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15608u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<RoleName>"),
                opcua::types::LocalizedText::new("", "<RoleName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16162u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15607u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1151(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15644u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "Anonymous"),
                    opcua::types::LocalizedText::new("", "Anonymous"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "The Role has very limited access for use when a Session has anonymous credentials.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16192u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15606u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15620u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1153(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15656u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "AuthenticatedUser"),
                    opcua::types::LocalizedText::new("", "AuthenticatedUser"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "The Role has limited access for use when a Session has valid non-anonymous credentials but has not been explicitly granted access to a Role.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16203u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15606u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15620u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1155(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18625u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "TrustedApplication"),
                opcua::types::LocalizedText::new("", "TrustedApplication"),
                Some(opcua::types::LocalizedText::new(
                    "",
                    "The Role has limited access for use when a Client has been authenticated.",
                )),
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18626u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15606u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1157(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15668u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "Observer"),
                    opcua::types::LocalizedText::new("", "Observer"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "The Role is allowed to browse, read live data, read historical data/events or subscribe to data/events.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16214u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15416u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16215u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15417u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16216u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24142u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15672u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15674u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16217u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16219u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16221u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16223u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15606u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15620u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1176(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15680u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "Operator"),
                    opcua::types::LocalizedText::new("", "Operator"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "The Role is allowed to browse, read live data, read historical data/events or subscribe to data/events.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16225u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15418u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16226u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15423u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16227u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24143u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15684u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15686u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16228u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16230u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16232u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16234u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15606u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15620u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1195(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16036u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "Engineer"),
                    opcua::types::LocalizedText::new("", "Engineer"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "The Role is allowed to browse, read live data, read and update historical data/events, call methods or subscribe to data/events.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16236u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15424u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16237u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15425u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16238u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24144u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16041u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16043u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16239u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16241u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16243u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16245u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15606u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15620u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1214(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15692u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "Supervisor"),
                    opcua::types::LocalizedText::new("", "Supervisor"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "The Role is allowed to browse, read live data, read and historical data/events, call methods or subscribe to data/events.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16247u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15426u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16248u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15427u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16249u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24145u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15696u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15698u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16250u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16252u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16254u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16256u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15606u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15620u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1233(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15716u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "ConfigureAdmin"),
                    opcua::types::LocalizedText::new("", "ConfigureAdmin"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "The Role is allowed to change the non-security related configuration settings.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16269u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15428u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16270u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15429u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16271u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24146u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15720u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15722u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16272u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16274u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16276u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16278u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15606u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15620u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1252(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15704u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "SecurityAdmin"),
                opcua::types::LocalizedText::new("", "SecurityAdmin"),
                Some(opcua::types::LocalizedText::new(
                    "",
                    "The Role is allowed to change security related settings.",
                )),
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16258u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15430u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16259u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15527u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16260u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24147u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15708u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15710u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16261u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16263u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16265u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16267u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15606u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1271(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25565u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "SecurityKeyServerAdmin"),
                    opcua::types::LocalizedText::new("", "SecurityKeyServerAdmin"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "This Role allows an administrator to manage SecurityGroups and PushTargets on a SKS. This includes executing methods related to management of SecurityGroups and PushTargets on an SKS.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25566u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25567u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25568u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25569u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25570u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25571u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25572u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25574u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25576u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25578u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25580u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25582u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15606u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15620u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1290(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25603u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "SecurityKeyServerAccess"),
                    opcua::types::LocalizedText::new("", "SecurityKeyServerAccess"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "This Role allows a PubSub Application to access an SKS to pull keys. It is the default Role for pull but it is expected that different custom Roles are used for different SecurityGroups.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25604u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25605u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25606u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25607u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25608u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25609u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25610u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25612u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25614u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25616u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25618u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25620u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15606u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15620u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1309(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25584u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "SecurityKeyServerPush"),
                    opcua::types::LocalizedText::new("", "SecurityKeyServerPush"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "This Role allows an SKS to push security keys to PubSub Applications. This includes executing methods related to PubSub security.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25585u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25586u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25587u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25588u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25589u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25590u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25591u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25593u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25595u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25597u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25599u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25601u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15606u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15620u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, }
        ],
    }
}
#[allow(unused)]
fn make_object_1329(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17590u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<DictionaryEntryName>"),
                opcua::types::LocalizedText::new("", "<DictionaryEntryName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17589u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17589u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1331(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17592u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<DictionaryFolderName>"),
                opcua::types::LocalizedText::new("", "<DictionaryFolderName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17591u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17591u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1332(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17593u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<DictionaryEntryName>"),
                opcua::types::LocalizedText::new("", "<DictionaryEntryName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17589u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17591u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1333(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17594u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Dictionaries"),
                opcua::types::LocalizedText::new("", "Dictionaries"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2253u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17591u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1338(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17708u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "InterfaceTypes"),
                opcua::types::LocalizedText::new("", "InterfaceTypes"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17602u32),
                type_id: opcua::types::NodeId::new(0u16, 35u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 86u32),
                type_id: opcua::types::NodeId::new(0u16, 35u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1346(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23519u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<OrderedObject>"),
                opcua::types::LocalizedText::new("", "<OrderedObject>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23521u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23513u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23518u32),
                type_id: opcua::types::NodeId::new(0u16, 49u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1402(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32452u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "AlternativeUnits"),
                opcua::types::LocalizedText::new("", "AlternativeUnits"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32587u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32447u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1403(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32587u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<AlternativeUnit>"),
                opcua::types::LocalizedText::new("", "<AlternativeUnit>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32588u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32590u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32467u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11510u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32452u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1407(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32462u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "CoherentUnit"),
                opcua::types::LocalizedText::new("", "CoherentUnit"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32463u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32465u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32442u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32447u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1419(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32481u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ServerUnits"),
                opcua::types::LocalizedText::new("", "ServerUnits"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32482u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32475u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1420(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32482u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<ServerUnit>"),
                opcua::types::LocalizedText::new("", "<ServerUnit>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32483u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32485u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32496u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32447u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11510u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32481u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1425(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32503u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<Quantity>"),
                opcua::types::LocalizedText::new("", "<Quantity>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32508u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32509u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32475u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32502u32),
                type_id: opcua::types::NodeId::new(0u16, 35u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1427(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32509u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ServerUnits"),
                opcua::types::LocalizedText::new("", "ServerUnits"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 32503u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1428(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32530u32),
                    opcua::types::NodeClass::Object,
                    opcua::types::QualifiedName::new(0u16, "Quantities"),
                    opcua::types::LocalizedText::new("", "Quantities"),
                    Some(
                        opcua::types::LocalizedText::new(
                            "",
                            "This Object is the entry point to quantities and their units managed in the Server.",
                        ),
                    ),
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::nodes::EventNotifier::from_bits_truncate(0u8),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2253u32), type_id : opcua::types::NodeId::new(0u16, 35u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 32502u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, }
        ],
    }
}
#[allow(unused)]
fn make_object_152(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2009u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ServerCapabilities"),
                opcua::types::LocalizedText::new("", "ServerCapabilities"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3086u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3087u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3088u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3089u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3090u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3091u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3092u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3093u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3094u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2013u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1531(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9178u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ShelvingState"),
                opcua::types::LocalizedText::new("", "ShelvingState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9179u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9184u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9189u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9213u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9211u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9212u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9118u32),
                type_id: opcua::types::NodeId::new(0u16, 9004u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1554(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16398u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "FirstInGroup"),
                opcua::types::LocalizedText::new("", "FirstInGroup"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16405u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1560(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16399u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<AlarmGroup>"),
                opcua::types::LocalizedText::new("", "<AlarmGroup>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16405u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 16361u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1582(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16406u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "<AlarmConditionInstance>"),
                opcua::types::LocalizedText::new("", "<AlarmConditionInstance>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16407u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16408u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16409u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16410u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16411u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16412u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16414u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16415u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16416u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16417u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16420u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16421u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16422u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16423u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16432u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16434u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16436u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16438u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16439u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16440u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16441u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16443u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16461u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16465u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16474u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16519u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16405u32),
                type_id: opcua::types::NodeId::new(0u16, 16362u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_160(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3093u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ModellingRules"),
                opcua::types::LocalizedText::new("", "ModellingRules"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2009u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_161(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3094u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "AggregateFunctions"),
                opcua::types::LocalizedText::new("", "AggregateFunctions"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2009u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_162(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2010u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ServerDiagnostics"),
                opcua::types::LocalizedText::new("", "ServerDiagnostics"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3095u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3110u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3111u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3114u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2020u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1623(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2930u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Unshelved"),
                opcua::types::LocalizedText::new("", "Unshelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 6098u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2935u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2936u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2940u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2943u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1625(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2932u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "TimedShelved"),
                opcua::types::LocalizedText::new("", "TimedShelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 6100u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2935u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2940u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2942u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2945u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1627(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2933u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "OneShotShelved"),
                opcua::types::LocalizedText::new("", "OneShotShelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 6101u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2936u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2942u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2943u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2945u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1629(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2935u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "UnshelvedToTimedShelved"),
                opcua::types::LocalizedText::new("", "UnshelvedToTimedShelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11322u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2930u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2932u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2949u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24756u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1631(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2936u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "UnshelvedToOneShotShelved"),
                opcua::types::LocalizedText::new("", "UnshelvedToOneShotShelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11323u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2930u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2933u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2948u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24760u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1633(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2940u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "TimedShelvedToUnshelved"),
                opcua::types::LocalizedText::new("", "TimedShelvedToUnshelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11324u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2932u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2930u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2947u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24758u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1635(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2942u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "TimedShelvedToOneShotShelved"),
                opcua::types::LocalizedText::new("", "TimedShelvedToOneShotShelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11325u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2932u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2933u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2948u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24760u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1637(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2943u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "OneShotShelvedToUnshelved"),
                opcua::types::LocalizedText::new("", "OneShotShelvedToUnshelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11326u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2933u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2930u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2947u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24758u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1639(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2945u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "OneShotShelvedToTimedShelved"),
                opcua::types::LocalizedText::new("", "OneShotShelvedToTimedShelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11327u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2933u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2932u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2949u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 24756u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1669(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9329u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "HighHigh"),
                opcua::types::LocalizedText::new("", "HighHigh"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9330u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9339u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9340u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9318u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1671(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9331u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "High"),
                opcua::types::LocalizedText::new("", "High"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9332u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9339u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9340u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9318u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1673(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9333u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Low"),
                opcua::types::LocalizedText::new("", "Low"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9334u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9337u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9338u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9318u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1675(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9335u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "LowLow"),
                opcua::types::LocalizedText::new("", "LowLow"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9336u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9337u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9338u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9318u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1677(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9337u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "LowLowToLow"),
                opcua::types::LocalizedText::new("", "LowLowToLow"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11340u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9335u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9333u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9318u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1679(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9338u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "LowToLowLow"),
                opcua::types::LocalizedText::new("", "LowToLowLow"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11341u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9333u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9335u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9318u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1681(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9339u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "HighHighToHigh"),
                opcua::types::LocalizedText::new("", "HighHighToHigh"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11342u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9329u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9331u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9318u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1683(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9340u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "HighToHighHigh"),
                opcua::types::LocalizedText::new("", "HighToHighHigh"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11343u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9331u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9329u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9318u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1688(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9455u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "LimitState"),
                opcua::types::LocalizedText::new("", "LimitState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9456u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9461u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9398u32),
                type_id: opcua::types::NodeId::new(0u16, 9004u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9318u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9341u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_177(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3111u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "SessionsDiagnosticsSummary"),
                opcua::types::LocalizedText::new("", "SessionsDiagnosticsSummary"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3112u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3113u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2026u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2010u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_181(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2011u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "VendorServerInfo"),
                opcua::types::LocalizedText::new("", "VendorServerInfo"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2033u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_182(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2012u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ServerRedundancy"),
                opcua::types::LocalizedText::new("", "ServerRedundancy"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3115u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2034u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1833(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3850u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "FinalResultData"),
                opcua::types::LocalizedText::new("", "FinalResultData"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1834(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2406u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Halted"),
                opcua::types::LocalizedText::new("", "Halted"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2407u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2408u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2412u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2420u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2424u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1836(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2400u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Ready"),
                opcua::types::LocalizedText::new("", "Ready"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2401u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2408u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2410u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2414u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2422u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2424u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1838(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2402u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Running"),
                opcua::types::LocalizedText::new("", "Running"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2403u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2410u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2412u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2414u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2416u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2418u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_184(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11527u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Namespaces"),
                opcua::types::LocalizedText::new("", "Namespaces"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11645u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1840(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2404u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Suspended"),
                opcua::types::LocalizedText::new("", "Suspended"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2405u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2416u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2418u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2420u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2422u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2307u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1842(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2408u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "HaltedToReady"),
                opcua::types::LocalizedText::new("", "HaltedToReady"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2409u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2406u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2400u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2430u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2378u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11856u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1844(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2410u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "ReadyToRunning"),
                opcua::types::LocalizedText::new("", "ReadyToRunning"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2411u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2400u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2402u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2426u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2378u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11856u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1846(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2412u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "RunningToHalted"),
                opcua::types::LocalizedText::new("", "RunningToHalted"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2413u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2402u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2406u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2429u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2378u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11856u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1848(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2414u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "RunningToReady"),
                opcua::types::LocalizedText::new("", "RunningToReady"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2415u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2402u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2400u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2378u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11856u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1850(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2416u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "RunningToSuspended"),
                opcua::types::LocalizedText::new("", "RunningToSuspended"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2417u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2402u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2404u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2427u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2378u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11856u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_1852(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2418u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "SuspendedToRunning"),
                opcua::types::LocalizedText::new("", "SuspendedToRunning"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2419u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2404u32),
                type_id: opcua::types::NodeId::new(0u16, 51u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2402u32),
                type_id: opcua::types::NodeId::new(0u16, 52u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2428u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2378u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11856u32),
                type_id: opcua::types::NodeId::new(0u16, 54u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2310u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
