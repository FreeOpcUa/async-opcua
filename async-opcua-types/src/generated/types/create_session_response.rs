// This file was autogenerated from schemas/1.05/Opc.Ua.NodeSet2.Services.xml by async-opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as types;
}
#[opcua::types::ua_encodable]
///https://reference.opcfoundation.org/v105/Core/docs/Part4/5.7.2/#5.7.2.2
#[derive(Debug, Clone, PartialEq, Default)]
pub struct CreateSessionResponse {
    pub response_header: opcua::types::response_header::ResponseHeader,
    pub session_id: opcua::types::node_id::NodeId,
    pub authentication_token: opcua::types::SessionAuthenticationToken,
    pub revised_session_timeout: opcua::types::data_types::Duration,
    pub server_nonce: opcua::types::byte_string::ByteString,
    pub server_certificate: opcua::types::ApplicationInstanceCertificate,
    pub server_endpoints: Option<Vec<super::endpoint_description::EndpointDescription>>,
    pub server_software_certificates:
        Option<Vec<super::signed_software_certificate::SignedSoftwareCertificate>>,
    pub server_signature: super::signature_data::SignatureData,
    pub max_request_message_size: u32,
}
impl opcua::types::MessageInfo for CreateSessionResponse {
    fn type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::CreateSessionResponse_Encoding_DefaultBinary
    }
    fn json_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::CreateSessionResponse_Encoding_DefaultJson
    }
    fn xml_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::CreateSessionResponse_Encoding_DefaultXml
    }
    fn data_type_id(&self) -> opcua::types::DataTypeId {
        opcua::types::DataTypeId::CreateSessionResponse
    }
}
