// This file was autogenerated from schemas/1.05/Opc.Ua.Types.bsd by async-opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as types;
}
#[derive(Debug, Clone, PartialEq, opcua::types::BinaryEncodable, opcua::types::BinaryDecodable)]
#[cfg_attr(
    feature = "json",
    derive(opcua::types::JsonEncodable, opcua::types::JsonDecodable)
)]
#[cfg_attr(feature = "xml", derive(opcua::types::FromXml))]
#[derive(Default)]
pub struct DatagramConnectionTransport2DataType {
    pub discovery_address: opcua::types::extension_object::ExtensionObject,
    pub discovery_announce_rate: u32,
    pub discovery_max_message_size: u32,
    pub qos_category: opcua::types::string::UAString,
    pub datagram_qos: Option<Vec<opcua::types::extension_object::ExtensionObject>>,
}
impl opcua::types::MessageInfo for DatagramConnectionTransport2DataType {
    fn type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::DatagramConnectionTransport2DataType_Encoding_DefaultBinary
    }
    fn json_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::DatagramConnectionTransport2DataType_Encoding_DefaultJson
    }
    fn xml_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::DatagramConnectionTransport2DataType_Encoding_DefaultXml
    }
    fn data_type_id(&self) -> opcua::types::DataTypeId {
        opcua::types::DataTypeId::DatagramConnectionTransport2DataType
    }
}
