// This file was autogenerated from schemas/1.05/Opc.Ua.Types.bsd by async-opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as types;
}
#[opcua::types::ua_encodable]
#[derive(Debug, Clone, PartialEq, Default)]
pub struct MonitoringParameters {
    pub client_handle: u32,
    pub sampling_interval: f64,
    pub filter: opcua::types::extension_object::ExtensionObject,
    pub queue_size: u32,
    pub discard_oldest: bool,
}
impl opcua::types::MessageInfo for MonitoringParameters {
    fn type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::MonitoringParameters_Encoding_DefaultBinary
    }
    fn json_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::MonitoringParameters_Encoding_DefaultJson
    }
    fn xml_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::MonitoringParameters_Encoding_DefaultXml
    }
    fn data_type_id(&self) -> opcua::types::DataTypeId {
        opcua::types::DataTypeId::MonitoringParameters
    }
}
