// This file was autogenerated from schemas/1.05/Opc.Ua.NodeSet2.Services.xml by async-opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as types;
}
#[opcua::types::ua_encodable]
///https://reference.opcfoundation.org/v105/Core/docs/Part4/7.26
#[derive(Debug, Clone, PartialEq, Default)]
pub struct NotificationMessage {
    pub sequence_number: opcua::types::Counter,
    pub publish_time: opcua::types::data_types::UtcTime,
    pub notification_data: Option<Vec<opcua::types::extension_object::ExtensionObject>>,
}
impl opcua::types::MessageInfo for NotificationMessage {
    fn type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::NotificationMessage_Encoding_DefaultBinary
    }
    fn json_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::NotificationMessage_Encoding_DefaultJson
    }
    fn xml_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::NotificationMessage_Encoding_DefaultXml
    }
    fn data_type_id(&self) -> opcua::types::DataTypeId {
        opcua::types::DataTypeId::NotificationMessage
    }
}
