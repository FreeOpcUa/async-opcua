// This file was autogenerated from schemas/1.05/Opc.Ua.Types.bsd by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as types;
}
#[derive(Debug, Clone, PartialEq, opcua::types::BinaryEncodable, opcua::types::BinaryDecodable)]
#[cfg_attr(
    feature = "json",
    derive(opcua::types::JsonEncodable, opcua::types::JsonDecodable)
)]
#[cfg_attr(feature = "xml", derive(opcua::types::FromXml))]
#[derive(Default)]
pub struct PubSubConfiguration2DataType {
    pub published_data_sets:
        Option<Vec<super::published_data_set_data_type::PublishedDataSetDataType>>,
    pub connections: Option<Vec<super::pub_sub_connection_data_type::PubSubConnectionDataType>>,
    pub enabled: bool,
    pub subscribed_data_sets: Option<
        Vec<super::standalone_subscribed_data_set_data_type::StandaloneSubscribedDataSetDataType>,
    >,
    pub data_set_classes: Option<Vec<super::data_set_meta_data_type::DataSetMetaDataType>>,
    pub default_security_key_services:
        Option<Vec<super::endpoint_description::EndpointDescription>>,
    pub security_groups: Option<Vec<super::security_group_data_type::SecurityGroupDataType>>,
    pub pub_sub_key_push_targets:
        Option<Vec<super::pub_sub_key_push_target_data_type::PubSubKeyPushTargetDataType>>,
    pub configuration_version: u32,
    pub configuration_properties: Option<Vec<super::key_value_pair::KeyValuePair>>,
}
impl opcua::types::MessageInfo for PubSubConfiguration2DataType {
    fn type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::PubSubConfiguration2DataType_Encoding_DefaultBinary
    }
    fn json_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::PubSubConfiguration2DataType_Encoding_DefaultJson
    }
    fn xml_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::PubSubConfiguration2DataType_Encoding_DefaultXml
    }
    fn data_type_id(&self) -> opcua::types::DataTypeId {
        opcua::types::DataTypeId::PubSubConfiguration2DataType
    }
}
