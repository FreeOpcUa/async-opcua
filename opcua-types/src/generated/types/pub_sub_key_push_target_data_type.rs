// This file was autogenerated from schemas/1.05/Opc.Ua.Types.bsd by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as types;
}
#[derive(Debug, Clone, PartialEq, opcua::types::BinaryEncodable, opcua::types::BinaryDecodable)]
#[cfg_attr(
    feature = "json",
    derive(opcua::types::JsonEncodable, opcua::types::JsonDecodable)
)]
#[cfg_attr(feature = "xml", derive(opcua::types::FromXml))]
#[derive(Default)]
pub struct PubSubKeyPushTargetDataType {
    pub application_uri: opcua::types::string::UAString,
    pub push_target_folder: Option<Vec<opcua::types::string::UAString>>,
    pub endpoint_url: opcua::types::string::UAString,
    pub security_policy_uri: opcua::types::string::UAString,
    pub user_token_type: super::user_token_policy::UserTokenPolicy,
    pub requested_key_count: u16,
    pub retry_interval: f64,
    pub push_target_properties: Option<Vec<super::key_value_pair::KeyValuePair>>,
    pub security_groups: Option<Vec<opcua::types::string::UAString>>,
}
impl opcua::types::MessageInfo for PubSubKeyPushTargetDataType {
    fn type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::PubSubKeyPushTargetDataType_Encoding_DefaultBinary
    }
    fn json_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::PubSubKeyPushTargetDataType_Encoding_DefaultJson
    }
    fn xml_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::PubSubKeyPushTargetDataType_Encoding_DefaultXml
    }
    fn data_type_id(&self) -> opcua::types::DataTypeId {
        opcua::types::DataTypeId::PubSubKeyPushTargetDataType
    }
}
